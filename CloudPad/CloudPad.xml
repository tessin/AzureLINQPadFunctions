<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CloudPad</name>
    </assembly>
    <members>
        <member name="P:CloudPad.Internal.LoaderLock.ApplicationBase">
            <summary>
            This value is always null when running from within LINQPad. When running outside LINQPad the value is only valid for the duration of the LINQPad UserQuery constructor.
            </summary>
        </member>
        <member name="M:CloudPad.ITimerInfo.GetNextOccurrence(System.Nullable{System.DateTime})">
            <summary>
            Gets the next occurrence of the schedule based on the specified base time.
            </summary>
        </member>
        <member name="M:CloudPad.ITimerInfo.GetNextOccurrences(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Returns a collection of the next 'count' occurrences of the schedule, starting from now.
            </summary>
        </member>
        <member name="P:CloudPad.ITimerInfo.Last">
            <summary>
            The last recorded schedule occurrence
            </summary>
        </member>
        <member name="P:CloudPad.ITimerInfo.Next">
            <summary>
            The expected next schedule occurrence
            </summary>
        </member>
        <member name="P:CloudPad.ITimerInfo.Updated">
            <summary>
            The last time this record was updated. This is used to re-calculate Next with the current Schedule after a host restart.
            </summary>
        </member>
        <member name="P:CloudPad.ITimerInfo.IsPastDue">
            <summary>
            Gets or sets a value indicating whether this timer invocation is due to a missed schedule occurrence.
            </summary>
        </member>
        <member name="M:CloudPad.ITimerInfo.FormatNextOccurrences(System.Int32,System.Nullable{System.DateTime})">
            <summary>
            Formats the next 'count' occurrences of the schedule into an easily loggable string.
            </summary>
        </member>
        <member name="T:CloudPad.Util">
            <summary>
            Late bound subset of LINQPad.Util interface. These utilities short circuit gracefully (do nothing) when not running within a LINQPad context.
            </summary>
        </member>
        <member name="T:CloudPad.Extensions">
            <summary>
            Late bound subset of LINQPad.Extensions interface. These utilities short circuit gracefully (do nothing) when not running within a LINQPad context.
            </summary>
        </member>
        <member name="M:CloudPad.CloudStorageHelper.AddQueueMessageAsync(System.String,System.Object,System.Nullable{System.TimeSpan},System.Nullable{System.TimeSpan})">
            <summary>
            Put a storage queue message in the queue specified by queueName. The queue message will be serialized as JSON. If you pass a CloudQueueMessage instance, the message is added to the queue as-is (not serialized as JSON).
            </summary>
        </member>
        <member name="M:CloudPad.CloudStorageHelper.UploadFromStreamAsync(System.String,System.String,System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Initiates an asynchronous operation to upload a stream to a block blob. If the blob already exists, it will be overwritten.
            </summary>
        </member>
        <member name="M:CloudPad.HttpTriggerAttribute.#ctor">
            <summary>
            Constructs a new instance.
            </summary>
        </member>
        <member name="M:CloudPad.HttpTriggerAttribute.#ctor(System.String[])">
            <summary>
            Constructs a new instance.
            </summary>        
            <param name="methods">The http methods to allow.</param>
        </member>
        <member name="M:CloudPad.HttpTriggerAttribute.#ctor(CloudPad.AuthorizationLevel)">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="authLevel">The <see cref="T:CloudPad.AuthorizationLevel"/> to apply.</param>
        </member>
        <member name="M:CloudPad.HttpTriggerAttribute.#ctor(CloudPad.AuthorizationLevel,System.String[])">
            <summary>
            Constructs a new instance.
            </summary>
            <param name="authLevel">The <see cref="T:CloudPad.AuthorizationLevel"/> to apply.</param>
            <param name="methods">The http methods to allow.</param>
        </member>
        <member name="P:CloudPad.HttpTriggerAttribute.Route">
            <summary>
            Gets or sets the route template for the function. Can include
            route parameters using WebApi supported syntax. If not specified,
            will default to the function name.
            </summary>
        </member>
        <member name="P:CloudPad.HttpTriggerAttribute.Methods">
            <summary>
            Gets the http methods that are supported for the function.
            </summary>
        </member>
        <member name="P:CloudPad.HttpTriggerAttribute.AuthLevel">
            <summary>
            Gets the authorization level for the function.
            </summary>
        </member>
        <member name="P:CloudPad.TimerTriggerAttribute.ScheduleExpression">
            <summary>
            Gets the schedule expression.
            </summary>
        </member>
        <member name="P:CloudPad.TimerTriggerAttribute.UseMonitor">
            <summary>
            Gets or sets a value indicating whether the schedule should be monitored. Schedule monitoring persists schedule occurrences to aid in ensuring the schedule is maintained correctly even when roles restart. If not set explicitly, this will default to true for schedules that have a recurrence interval greater than 1 minute (i.e., for schedules that occur more than once per minute, persistence will be disabled).
            </summary>
        </member>
        <member name="P:CloudPad.TimerTriggerAttribute.RunOnStartup">
            <summary>
            Gets or sets a value indicating whether the function should be invoked immediately on startup. After the initial startup run, the function will be run on schedule thereafter.
            </summary>
        </member>
    </members>
</doc>
